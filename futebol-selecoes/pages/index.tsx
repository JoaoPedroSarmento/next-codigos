import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { GetStaticProps } from "next";
import { fetchSelecoes } from "@/src/services/selecoes";
import SelecaoCard from "@/src/components/SelecaoCard";
import { Button, Input, Row } from "reactstrap";
import { useState } from "react";
import { useRouter } from "next/router";
const inter = Inter({ subsets: ["latin"] });

export const getStaticProps: GetStaticProps = async () => {
  const selecoes = await fetchSelecoes();
  return {
    props: { selecoes },
    revalidate: 10,
  };
};

export default function Home(props: { selecoes: SelecaoType[] }) {
  const { selecoes } = props;
  const [inputValue, setInputValue] = useState("");
  const router = useRouter();

  const searchAndNavigate = (ev) => {
    ev.preventDefault();

    const searchTerm = inputValue.trim().toLowerCase();

    if (searchTerm) {
      const regex = new RegExp(
        searchTerm
          .normalize("NFD")
          .replace(/[\u0300-\u036f]/g, "")
          .replace(/[^a-zA-Z0-9]/g, "\\$&"),
        "i"
      );

      const matchingSelecao = selecoes
        .filter((selecao) => regex.test(selecao.nome.normalize("NFD")))
        .sort((a, b) => a.nome.localeCompare(b.nome))[0];

      if (matchingSelecao) {
        router.replace(`/detalhes/${encodeURIComponent(matchingSelecao.nome)}`);
      }
    }
  };

  return (
    <>
      <Head>
        <title>Seleções mundiais</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <h1>10 maiores seleções do Mundo</h1>
        <Row style={{ marginBottom: "20px" }}>
          <form onSubmit={searchAndNavigate}>
            <Input
              type="text"
              placeholder="Pesquisar seleções..."
              value={inputValue}
              onChange={(ev) => setInputValue(ev.currentTarget.value)}
            />
            <Button type="submit" color="primary">
              Pesquisar
            </Button>
          </form>
        </Row>

        <Row
          style={{
            display: "flex",
            flexWrap: "wrap",
            gap: "20px",
            justifyContent: "center",
          }}
        >
          {selecoes.map((selecao) => (
            <SelecaoCard key={selecao.nome} selecao={selecao} />
          ))}
        </Row>
      </main>
    </>
  );
}
